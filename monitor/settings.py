# coding:utf-8 
"""
Django settings for monitor project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

"""用户模块扩展部分"""
AUTH_PROFILE_MODULE = 'djangoadmin.myadmin.UserProfile'
"""用户模块扩展完成"""


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c1&+!cifrwrgekxid63l$&#!1#628!l5t59t6&gxass(!q+00j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CSRF_COOKIE_SECURE = False

ADMINS = [('Arno', 'Arno@ag866.com')]

ALLOWED_HOSTS = ['192.168.100.107', '43.241.204.107', '10.11.15.218', '192.168.100.1']

LOGIN_REDIRECT_URL = '/tomcat/index/'

#LOGIN_URL = '/admin/login/'
LOGIN_URL = '/accounts/login'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'check_tomcat',
    'saltstack',
    'djcelery',
    'clientservices',
    #'users',
]

#AUTH_USER_MODEL = 'users.User'


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'monitor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'monitor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'monitor',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': 'monitor',
        'PASSWORD': 'ag866.com',
        'HOST': '192.168.100.164',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '3306',                      # Set to empty string for default.
        'OPTIONS': {
            #'init_command': 'SET sql_mode=STRICT_TRANS_TABLES',
            'charset': 'utf8',
        },
    }
}
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

SITE_ID = 1

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'static'),
#]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s %(filename)s [%(name)s:%(lineno)d] [%(levelname)s]- %(message)s'
        },
    },
    'filters': {
    },
    'handlers': {
        #'mail_admins': {
        #    'level': 'ERROR',
        #    'class': 'django.utils.log.AdminEmailHandler',
        #    'include_html': True,
        #},
        'default': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','monitor.log'),
            'maxBytes': 1024*1024*50, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        #'console':{
        #    'level': 'DEBUG',
        #    'class': 'logging.StreamHandler',
        #    'formatter': 'standard'
        #},
        'request_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','debug.log'),
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        'error': {
            'level':'ERROR',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR+'/logs/','error.log'), 
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'error', 'request_handler'],
            'level': 'DEBUG',
            'propagate': False
        },
        #'django.request': {
        #    'handlers': ['request_handler'],
        #    'level': 'DEBUG',
        #    'propagate': False
        #},
    }
}          

USERS_REGISTRATION_OPEN = True
 
USERS_VERIFY_EMAIL = True
 
USERS_AUTO_LOGIN_ON_ACTIVATION = True
 
USERS_EMAIL_CONFIRMATION_TIMEOUT_DAYS = 3
 
# Specifies minimum length for passwords:
USERS_PASSWORD_MIN_LENGTH = 5
 
# Specifies maximum length for passwords:
USERS_PASSWORD_MAX_LENGTH = None
 
# the complexity validator, checks the password strength
USERS_CHECK_PASSWORD_COMPLEXITY = True
 
USERS_SPAM_PROTECTION = False  # important!
 
 
#  ---------------------------------------------------------
#  Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
#EMAIL_HOST_USER = 'sa@ag866.com'
#EMAIL_HOST_PASSWORD = 'ag866sSBra'
DEFAULT_FROM_EMAIL = 'sa@ag866.com'

SALT_API = {
    'url':"https://192.168.100.109:8000/",
    'user':"saltapi",
    'password':"ag866.com",
}
