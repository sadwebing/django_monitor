{% extends "base.html" %}
{% block content %}
<div class="container"> 
<div class="table-responsive"> 
  <div id="toolbar" class="btn-group">
   <button id="btn_add" type="button" class="btn btn-default">
    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
   </button>
   <button id="btn_edit" type="button" class="btn btn-default">
    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
   </button>
   <button id="btn_delete" type="button" class="btn btn-default">
    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
   </button>
  </div>
    <table id="tomcat_table" class="table table-bordered"></table>
</div>
</div>
       <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">操作</h4>
                    </div>
                    <div class="modal-body">

                        <div class="form-group">
                            <label for="txt_project">project</label>
                            <input type="text" name="txt_project" data-bind="value:project" class="form-control" id="txt_project" placeholder="project">
                        </div>
                        <div class="form-group">
                            <label for="txt_domain">domain</label>
                            <input type="text" name="txt_domain" data-bind="value:domain" class="form-control" id="txt_domain" placeholder="domain">
                        </div>
                        <div class="form-group">
                            <label for="txt_url">url</label>
                            <input type="text" name="txt_url" data-bind="value:url" class="form-control" id="txt_url" placeholder="url">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>关闭</button>
                        <button type="button" id="btn_submit" class="btn btn-primary" data-dismiss="modal"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
                    </div>
                </div>
            </div>
        </div>
<script type="text/javascript"> 
   $(function initTable() {
    $('#tomcat_table').bootstrapTable('destroy');
    $('#tomcat_table').bootstrapTable({
     method: "get",
     url: "/tomcat/tomcat_url",
     dataType: "json",
     toolbar: '#toolbar',   
     striped: true, 
     cache: false, 
     pagination: true,
     sortable: false, 
     pageNumber: 1,  
     pageSize: 10,  
     pageList: [10, 25, 50, 100], 
     search: true,  
     uniqueId: "id",
     showColumns: true, 
     showRefresh: true, 
     minimumCountColumns: 2,
     clickToSelect: true,  
     showToggle: true,   
     cardView: false,   
     detailView: false, 
     columns: [{
      checkbox: true
     },
     {
      field: 'id',
      title: 'id'
     },{
      field: 'project',
      title: 'project'
     }, {
      field: 'domain',
      title: 'domain'
     }, {
      field: 'url',
      title: 'url'
     },]
    });
   });
</script> 
<script>
$(function () {
    operate.operateInit();
});
//操作
var operate = {
    //初始化按钮事件
    operateInit: function () {
        this.operateAdd();
        this.operateUpdate();
        this.operateDelete();
        this.DepartmentModel = {
            project: ko.observable(),
            domain: ko.observable(),
            url: ko.observable(),
        };
    },
    //新增
    operateAdd: function(){
        $('#btn_add').on("click", function () {
            $("#myModal").modal().on("shown.bs.modal", function () {
                var oEmptyModel = {
                    project: ko.observable(),
                    domain: ko.observable(),
                    url: ko.observable(),
                };
                ko.utils.extend(operate.DepartmentModel, oEmptyModel);
                ko.applyBindings(operate.DepartmentModel, document.getElementById("myModal"));
                operate.operateSave();
            }).on('hidden.bs.modal', function () {
                ko.cleanNode(document.getElementById("myModal"));
            });
        });
    },
    //编辑
    operateUpdate: function () {
        $('#btn_edit').on("click", function () {
            $("#myModal").modal().on("shown.bs.modal", function () {
                var arrselectedData = initTable.bootstrapTable.getSelections();
                if (!operate.operateCheck(arrselectedData)) { return; }
                //将选中该行数据有数据Model通过Mapping组件转换为viewmodel
                ko.utils.extend(operate.DepartmentModel, ko.mapping.fromJS(arrselectedData[0]));
                ko.applyBindings(operate.DepartmentModel, document.getElementById("myModal"));
                operate.operateSave();
            }).on('hidden.bs.modal', function () {
                //关闭弹出框的时候清除绑定(这个清空包括清空绑定和清空注册事件)
                ko.cleanNode(document.getElementById("myModal"));
            });
        });
    },
    //删除
    operateDelete: function () {
        $('#btn_delete').on("click", function () {
            var arrselectedData = tableInit.myViewModel.getSelections();
            $.ajax({
                url: "/tomcat/Delete",
                type: "post",
                contentType: 'application/json',
                data: JSON.stringify(arrselectedData),
                success: function (data, status) {
                    alert(status);
                    //tableInit.myViewModel.refresh();
                }
            });
        });
    },
    //保存数据
    operateSave: function () {
        $('#btn_submit').on("click", function () {
            //取到当前的viewmodel
            var oViewModel = operate.DepartmentModel;
            //将Viewmodel转换为数据model
            var oDataModel = ko.toJS(oViewModel);var funcName = oDataModel.id?"Update":"Add";
            $.ajax({
                url: "/tomcat/"+funcName,
                type: "post",
                data: oDataModel,
                success: function (data, status) {
                    alert(status);
                    tableInit.myViewModel.refresh();
                }
            });
        });
    },
    //数据校验
    operateCheck:function(arr){
        if (arr.length <= 0) {
            alert("请至少选择一行数据");
            return false;
        }
        if (arr.length > 1) {
            alert("只能编辑一行数据");
            return false;
        }
        return true;
    }
}
</script>
{% endblock %}
